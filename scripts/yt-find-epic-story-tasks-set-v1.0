#!/usr/bin/env bash

# Any Task linked into an Epic, via a story, where the Task has no
# Affected versions, set it to v1.0.
#
# Run this script like this:
#
#   $ yt-find-epic-story-tasks-set-v1.0
#

query='Type: Epic'
issues=`pyu list issues --filter="$query" | grep Id | cut -d':' -f 2`
#echo "Starting Epic set: $issues"

let estimation=0
for issue in $issues; do
  issue=${issue// /}
  #echo "Examining Epic $issue .."
  issueAttrs="`pyu show issue $issue`"
  summary=`echo -en "$issueAttrs" | grep Summary | cut -d':' -f 2-`
  state=`echo -en "$issueAttrs" | grep State | cut -d':' -f 2-`
  estimationStr=`echo -en "$issueAttrs" | grep Estimation | cut -d':' -f 2-`
  estimation=0
  if [ ! -z "$estimationStr" ]; then
    estimation=`echo "$estimationStr/480" | bc`
  fi
  url=`echo -en "$issueAttrs" | grep Link | cut -d':' -f 2-`
  url=${url// /}
  echo "Epic $issue $summary"

  # Examine this Epic's child issues.
  links=`pyu list links --issue $issue`
  re='Source               : '$issue'[\
]+Type outward         : parent for'
  if [[ "$links" =~ ${re} ]]; then
    #echo "has child issues."
    # Loop through the child issues of this Epic.
    childrenOfEpic=`pyu list links --issue $issue | grep Target | grep -v $issue | cut -d':' -f 2`
    for childOfEpic in $childrenOfEpic; do
      childOfEpic=${childOfEpic// /}
      childOfEpicAttrs="`pyu show issue $childOfEpic`"	
      childOfEpicType=`echo -en "$childOfEpicAttrs" | grep Type |cut -d':' -f 2`
      childOfEpicType=${childOfEpicType// /}
      if [ "$childOfEpicType" == "Story" ]; then
        summary=`echo -en "$childOfEpicAttrs" | grep Summary | cut -d':' -f 2-`
        state=`echo -en "$childOfEpicAttrs" | grep State | cut -d':' -f 2-`
        if [ "$state" == 'Closed' ] || [ "$state" == 'Resolved' ] || [ "$state" == 'Done' ]; then
	  continue;
	fi
	estimationStr=`echo -en "$childOfEpicAttrs" | grep Estimation | cut -d':' -f 2-`
        estimation=0
        if [ ! -z "$estimationStr" ]; then
          estimation=`echo "$estimationStr/480" | bc`
        fi
        url=`echo -en "$childOfEpicAttrs" | grep Link | cut -d':' -f 2-`
        url=${url// /}
	echo "  Story $childOfEpic $summary | State: $state"

	# Examine this Story's child issues.
	links=`pyu list links --issue $childOfEpic`
	re='Source               : '$issue'[\
]+Type outward         : parent for'
	if [[ "$links" =~ ${re} ]]; then
	  #echo "has child issues."
	  # Loop through the child issues of this Story.
          childrenOfStory=`pyu list links --issue $childOfEpic | grep Target | grep -v $childOfEpic | cut -d':' -f 2`
          for childOfStory in $childrenOfStory; do
            childOfStory=${childOfStory// /}
	    childOfStoryAttrs=`pyu show issue $childOfStory`
            childOfStoryType=`echo -en "$childOfStoryAttrs" | grep Type | cut -d':' -f 2`
            childOfStoryType=${childOfStoryType// /}
            if [ "$childOfStoryType" == "Task" ]; then
	      summary=`echo -en "$childOfStoryAttrs" | grep Summary | cut -d':' -f 2-`
              state=`echo -en "$childOfStoryAttrs" | grep State | cut -d':' -f 2-`
              if [ "$state" == 'Closed' ] || [ "$state" == 'Resolved' ] || [ "$state" == 'Done' ]; then
                continue;
	      fi
	      estimationStr=`echo -en "$childOfStoryAttrs" | grep Estimation | cut -d':' -f 2-`
              estimation=0
              if [ ! -z "$estimationStr" ]; then
                estimation=`echo "$estimationStr/480" | bc`
              fi
	      affectedVersions=`pyu show issue $childOfStory | grep 'Affected versions' | cut -d':' -f 2`
              affectedVersions=${affectedVersions// /}
              url=`echo -en "$childOfStoryAttrs" | grep Link | cut -d':' -f 2-`
              url=${url// /}
	      
              echo "    Task $childOfStory $summary | State: $state | Affected versions: $affectedVersions"
              if [ "$affectedVersions" == "" ]; then
                echo "              updating Affected versions=v1.0"
                pyu update issue $childOfStory --command='Affected versions: v1.0'
                echo "Task $issue updated."
              fi
	    fi
	  done
	fi
      fi
    done
  fi
done

